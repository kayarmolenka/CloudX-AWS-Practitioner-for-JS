service: import-service

frameworkVersion: '3'

useDotenv: true

provider:
  name: aws
  runtime: nodejs14.x
  stage: dev
  region: eu-west-1

  iam:
    role:
      statements:
        - Effect: "Allow"
          Action: "s3:ListBucket"
          Resource:
            - "arn:aws:s3:::import-products-file-bucket"
        - Effect: "Allow"
          Action: "s3:*"
          Resource:
            - "arn:aws:s3:::import-products-file-bucket/*"
        - Effect: "Allow"
          Action: "sqs:*"
          Resource:
            - "arn:aws:sqs:eu-west-1:586991438907:catalogItemsQueue"

  environment:
    SQS_URL: ${env:SQS_URL}

plugins:
  - serverless-webpack
  - serverless-dotenv-plugin

custom:
  webpack:
    webpackConfig: 'webpack.config.js'
    includeModules: true
    packager: npm
  serverless-offline:
    httpPort: 3001

functions:
  importProductsFile:
    handler: src/handler.importProductsFile
    events:
      - http:
          path: import
          method: get
          request:
            parameters:
              querystrings:
                name: true
          cors: true
          authorizer:
            name: basicAuthorizer
            type: token
            identitySource: method.request.header.Authorization
            arn: "arn:aws:lambda:eu-west-1:586991438907:function:authorization-service-dev-basicAuthorizer"
            resultTtlInSeconds: 0

  importFileParser:
    handler: src/handler.importFileParser
    events:
      - s3:
          bucket: import-products-file-bucket
          event: s3:ObjectCreated:*
          rules:
            - prefix: uploaded/
            - suffix: .csv
          existing: true

resources:
  Resources:
    GatewayResponseDefault4XX:
      Type: "AWS::ApiGateway::GatewayResponse"
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: DEFAULT_4XX
        RestApiId:
          Ref: "ApiGatewayRestApi"